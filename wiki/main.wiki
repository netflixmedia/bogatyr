#summary Main page of the project.

<wiki:toc max_depth="2" />

== Welcome ==
We program every day since many years with Java. Like in every other language, we needed always the same kind of functions, like reading a file. Today it's normal, that every good application needs some standard functions, like a logger, properties, i18n and much more. Our credo is DRY, so this is why we've got the idea to create a "toolbox" aka library.

== Main Features ==
 * Completly written in Java 1.6
 * Platform independent
 * Fully configurable with *properties* (you can easy add your own property reader, e.g. for db access)
 * Multi-language support with *i18n* standard (you can easy add your own localizer, e.g. for db access)
 * Synchron and asynchron *client/sever* architecture, security manager to validate all client actions, DOS and overload protection
 * Symmetric (e.g. AES) and asymmetric (e.g. RSA) *cryptographic engine* with key wrapper and X.509 reader
 * *HashCode* generator for SHA256, MD5, RIPE160 and much more
 * *Scrambler* to obfuscate data quickly
 * Start *external processes* (incl. launchers for a webbrowser and files, e.g. PDF)
 * *Splash* screen (timer and switch on/off)
 * Plenty helper classes (utils and GUI components) like Base64 and Hex converter, *I/O operations* (move, copy, search, read, write), random key generator, generic toString() method
 * Powerful *networking* classes (e.g. use of a proxy, URL reading, HTTP authentication, datagram dumper)
 * *PDF generator* for components and HTML sites
 * *Sound* class with support for sequences (e.g. MIDI) and sampled audio (e.g. WAV, AU)
 * *Graphic* and image classes for read, write (e.g. JPG, PNG, GIF) and modify images
 * *Math* class for operations like log, round, gaussian, fractional error, cumulative normal distribution, prime numbers, least commom multiple, greatest common divisor
 * Chart for GUI layout (colums/rows with naming)
 * *SQL* provider with methods for update and execute
 * *Compress* files (zip) and streams (GZip)
 * JUnit tests for all classes
 * *Automatic application updater* with the ability to update the application or files from a given file or internet site
 * *Timer* for count the time up and down (e.g. as some kind of "stop watch")
 * *JAXB generic* un-/marshaller
 * Scaling and rotating of images
 * *Unit* conversions (area, bit, length, time, volume, weight)
 * *Profiler* to count the execution time java code
 * FastHash for hashing large data very fast
  
== News ==
 * 2010-02-12 Bogatyr 0.94 released! ([[http://code.google.com/p/bogatyr/downloads/list|Download]])  

== Tutorials ==

== Examples ==

== Hints ==
For our experience around Java, please check out the [[hints:hints]].